What happens when you initialize a repository? Why do you need to do it?

	When you initialize repository, git creates folder .git with metadata for this repository.
	You need do this to start to work with folder as with repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	In working directory you have all your files of current project.
	In staging area you can temporary keep the files you want to add in next commin.
	So, staging area offers the way to select files for committing without need to commit all at once.

How can you use the staging area to make sure you have one commit per logical
change?
	You can use git add to add into staging area only that files you think are logicaly joined and commit only them.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branch are useful when you want to experiment with new feature, with another version of your software.
	Branches help because allow you to see the commits logically organized and clear.

How do the diagrams help you visualize the branch structure?

	Diagrams are visual representations of commits order in different branches, so using them you can see the structure of your repository.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	When you merge two branches together your commits from both branches became inside same merged branch.
	Such branched diagram representation shows which commits have which parents in clear and understandable way.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	If you have no conflicts, automatic merging will save your time.
	And if merging can't be resolved automatically because of conflicts, then you need to use manual merging.